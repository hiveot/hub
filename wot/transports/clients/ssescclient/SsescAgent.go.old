package ssescclient

import (
	"errors"
	"github.com/hiveot/hub/api/go/digitwin"
	"log/slog"
	"net/http"
)

// PubActionStatus agent publishes a request status update message to the digital twin
// The digital twin will update the request status and notify the sender.
// This returns an error if the connection with the server is broken
func (cl *HttpSSEClient) PubActionStatus(stat transports.RequestStatus) {
	slog.Debug("PubActionStatus",
		slog.String("agentID", cl.clientID),
		slog.String("thingID", stat.ThingID),
		slog.String("name", stat.Name),
		slog.String("progress", stat.Status),
		slog.String("requestID", stat.CorrelationID))

	stat2 := cl.PubMessage(http.MethodPost, PostAgentPublishProgressPath,
		"", "", stat, nil, stat.CorrelationID)
	if stat.Error != "" {
		slog.Warn("PubActionStatus failed", "err", stat2.Error)
	}
}

// PubEvent publishes an event message and returns
// This returns an error if the connection with the server is broken
func (cl *HttpSSEClient) PubEvent(thingID string, name string, data any, requestID string) error {
	slog.Debug("PubEvent",
		slog.String("agentID", cl.clientID),
		slog.String("thingID", thingID),
		slog.String("name", name),
		slog.Any("data", data),
		//slog.String("requestID", requestID),
	)
	stat := cl.PubMessage(http.MethodPost, PostAgentPublishEventPath, thingID, name, data, nil, requestID)
	if stat.Error != "" {
		return errors.New(stat.Error)
	}
	return nil
}

// PubMultipleProperties agent publishes a batch of property values.
// Intended for use by agents
func (cl *HttpSSEClient) PubMultipleProperties(thingID string, propMap map[string]any) error {
	slog.Info("PubMultipleProperties",
		slog.String("thingID", thingID),
		slog.Int("nr props", len(propMap)),
	)
	// FIXME: get path from forms
	stat := cl.PubMessage("POST", PostAgentUpdateMultiplePropertiesPath,
		thingID, "", propMap, nil, "")
	if stat.Error != "" {
		return errors.New(stat.Error)
	}
	return nil
}

// PubProperty agent publishes a property value update.
// Intended for use by agents to property changes
func (cl *HttpSSEClient) PubProperty(thingID string, name string, value any) error {
	slog.Info("PubProperty",
		slog.String("thingID", thingID),
		slog.String("name", name),
		slog.Any("value", value))

	// FIXME: get path from forms
	stat := cl.PubMessage("POST", PostAgentUpdatePropertyPath,
		thingID, name, value, nil, "")
	if stat.Error != "" {
		return errors.New(stat.Error)
	}
	return nil
}

// PubTD publishes a TD update.
// This is short for a digitwin directory updateTD action
func (cl *HttpSSEClient) PubTD(thingID string, tdJSON string) error {
	slog.Info("PubTD", slog.String("thingID", thingID))

	err := digitwin.DirectoryUpdateTD(cl, tdJSON)
	return err
}
