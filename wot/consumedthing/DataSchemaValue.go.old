package consumedthing

import "fmt"

// DataSchemaValue represents a value provided by InteractionOutput.
// This differs from the WoT definition in that it includes type conversions.
// provides
type DataSchemaValue struct {
	raw any
}

// AsText returns the text representation of the value
func (v *DataSchemaValue) AsText() string {
	txt := fmt.Sprintf("%v", v.raw)
	return txt
}

func (v *DataSchemaValue) AsBoolean() bool {

}
func (v *DataSchemaValue) AsInteger() int {

}
func (v *DataSchemaValue) AsNumber() float32 {

}

// AsObject decodes the value to the given object.
func (v *DataSchemaValue) AsObject(output interface{}) error {

}

// Raw returns the raw value
func (v *DataSchemaValue) Raw() any {
	return v.raw
}

// implement a data
func NewDataSchemaValue(data any) *DataSchemaValue {
	return &DataSchemaValue{raw: data}
}
