// Package digitwin with types and interfaces for using this service with agent 'digitwin'
// DO NOT EDIT. This file is auto generated by tdd2api. Any changes will be overwritten.
// Generated 12 Sep 24 19:43 PDT.
package digitwin

import "errors"
import "github.com/hiveot/hub/lib/utils"
import "github.com/hiveot/hub/lib/hubclient"

// OutboxAgentID is the connection ID of the agent managing the Thing.
const OutboxAgentID = "digitwin"

// OutboxServiceID is the internal thingID of the device/service as used by agents.
// Agents use this to publish events and subscribe to actions
const OutboxServiceID = "outbox"

// OutboxDThingID is the Digitwin thingID as used by agents. Digitwin adds the dtw:{agent} prefix to the serviceID
// Consumers use this to publish actions and subscribe to events
const OutboxDThingID = "dtw:digitwin:outbox"

//--- Argument and Response struct for action of Thing 'dtw:digitwin:outbox' ---

const OutboxReadLatestMethod = "readLatest"

// OutboxReadLatestArgs defines the arguments of the readLatest function
// Read Latest - Read the latest value(s) of a Thing
type OutboxReadLatestArgs struct {

	// MessageType with Message Type
	//
	// Message type to read, eg events or properties
	MessageType string `json:"messageType,omitempty"`

	// Names with Value Names
	//
	// The event/property names to read or empty to read all latest values
	Names []string `json:"names,omitempty"`

	// Since with Since
	//
	// Only return values updated since
	Since string `json:"since,omitempty"`

	// ThingID with Thing ID
	//
	// ID of the Thing to read
	ThingID string `json:"thingID,omitempty"`
}

// OutboxReadLatestResp defines the response of the readLatest function
// Read Latest - Read the latest value(s) of a Thing
//
// JSON encoded map of key:ThingMessage objects
type OutboxReadLatestResp struct {

	// Output with Value map
	//
	// JSON encoded map of key:ThingMessage objects
	Output map[string]interface{} `json:"output,omitempty"`
}

const OutboxRemoveValueMethod = "removeValue"

// OutboxReadLatest client method - Read Latest.
// Read the latest value(s) of a Thing
func OutboxReadLatest(hc hubclient.IHubClient, messageType string, names []string, since string, thingID string) (valuemap map[string]interface{}, err error) {
	var args = OutboxReadLatestArgs{messageType, names, since, thingID}
	err = hc.Rpc(OutboxDThingID, OutboxReadLatestMethod, &args, &valuemap)
	return
}

// OutboxRemoveValue client method - Remove Thing Value.
// Remove a value
func OutboxRemoveValue(hc hubclient.IHubClient, messageID string) (err error) {

	err = hc.Rpc(OutboxDThingID, OutboxRemoveValueMethod, &messageID, nil)
	return
}

// IOutboxService defines the interface of the 'Outbox' service
//
// This defines a method for each of the actions in the TD.
type IOutboxService interface {

	// ReadLatest Read Latest
	// Read the latest value(s) of a Thing
	// This returns a jSON encoded map of key:ThingMessage objects
	ReadLatest(senderID string, args OutboxReadLatestArgs) (valuemap map[string]interface{}, err error)

	// RemoveValue Remove Thing Value
	// Remove a value
	RemoveValue(senderID string, messageID string) error
}

// NewOutboxHandler returns a server handler for Thing 'dtw:digitwin:outbox' actions.
//
// This unmarshalls the request payload into an args struct and passes it to the service
// that implements the corresponding interface method.
//
// This returns the marshalled response data or an error.
func NewOutboxHandler(svc IOutboxService) func(*hubclient.ThingMessage) hubclient.DeliveryStatus {
	return func(msg *hubclient.ThingMessage) (stat hubclient.DeliveryStatus) {
		var err error
		var resp interface{}
		var senderID = msg.SenderID
		switch msg.Name {
		case "readLatest":
			args := OutboxReadLatestArgs{}
			err = utils.DecodeAsObject(msg.Data, &args)
			if err == nil {
				resp, err = svc.ReadLatest(senderID, args)
			} else {
				err = errors.New("bad function argument: " + err.Error())
			}
			break
		case "removeValue":
			var args string
			err = utils.DecodeAsObject(msg.Data, &args)
			if err == nil {
				err = svc.RemoveValue(senderID, args)
			} else {
				err = errors.New("bad function argument: " + err.Error())
			}
			break
		default:
			err = errors.New("Unknown Method '" + msg.Name + "' of service '" + msg.ThingID + "'")
			stat.Failed(msg, err)
		}
		stat.Completed(msg, resp, err)
		return stat
	}
}

// OutboxTD contains the raw TD of this service for publication to the Hub
const OutboxTD = `{"@context":["https://www.w3.org/2022/wot/td/v1.1",{"ht":"https://www.hiveot.net/vocab/v0.1"}],"@type":"Service","created":"2024-04-26T17:00:00.000Z","description":"HiveOT digital twin outbox event storage","id":"outbox","modified":"2024-04-26T17:00:00.000Z","support":"https://www.github.com/hiveot/hub","title":"DigiTwin Outbox","actions":{"readLatest":{"@type":"ht:function","title":"Read Latest","description":"Read the latest value(s) of a Thing","input":{"readOnly":false,"type":"object","properties":{"messageType":{"title":"Message Type","description":"Message type to read, eg events or properties","enum":["events","properties"],"readOnly":false,"type":"string"},"names":{"title":"Value Names","description":"The event/property names to read or empty to read all latest values","readOnly":false,"type":"array","items":{"readOnly":false,"type":"string"}},"since":{"title":"Since","description":"Only return values updated since","readOnly":false,"type":"dateTime"},"thingID":{"title":"Thing ID","description":"ID of the Thing to read","readOnly":false,"type":"string"}},"required":["thingID"]},"output":{"@type":"ht:ThingMessageMap","title":"Value map","description":"JSON encoded map of key:ThingMessage objects","readOnly":false,"type":"object"},"safe":true,"idempotent":true},"removeValue":{"@type":"ht:function","title":"Remove Thing Value","description":"Remove a value","input":{"title":"Message ID","description":"ID of the message to remove","readOnly":false,"type":"string"},"idempotent":true}},"events":{"valueUpdated":{"title":"Thing property updated","description":"A Thing's property value was updated","data":{"readOnly":false,"type":"object","properties":{"name":{"title":"Property name","description":"ID of the property that was updated","readOnly":false,"type":"string"},"thingID":{"title":"Thing ID","description":"ID of the Thing that was updated","readOnly":false,"type":"string"},"value":{"title":"New value","description":"The new value of the property","readOnly":false,"type":"string"}}}}},"security":["bearer"],"securityDefinitions":{"bearer":{"description":"HTTP protocol authentication","scheme":"bearer","name":"authentication","alg":"es256","format":"jwt","in":"header"}}}`
