# Launcher configuration

# Launcher authentication in the certs directory
#keyFile: launcher.key           # default is launcher.key
#tokenFile: launcher.token       # default is launcher.token


# log launcher to stdout/stderr at level info (default is warning)
logLevel: info

# log launcher output to file (default is true)
#logtofile: true  #

# Core binary to launch before the plugins. The core binary must reside in the bin directory.
# comment out if a core is already running elsewhere.
# known core binaries are mqttcore or natscore
# WARNING: keys and tokens are not compatible between cores. Empty the certs directory first.
corebin: mqttcore

# write plugin stdout and stderr to logfile at logs/{pluginname}.log (default is true)
#logplugins: true

# attach to service stderr for logging and testing (default is true)
#attachstderr: true

# attach to service stdout for logging and testing (default if false)
#attachstdout: false

# automatically restart services when they stop
#autorestart: false    # enable the auto-restart feature (default is disabled)

# createPluginCred generates plugin credentials, if they don't exist.
# location is the application certs directory using the name format {plugin}.key and {plugin}.token.
#createPluginCred: true    (default true)


# Plugins to start in order
autostart:
  # core services
  - certs             # certificate management service
  - state             # client state storage
  - directory         # storage of things directory
  - history           # storage of event history
  - idprov            # IoT device provisioning service

# protocol bindings
#  - hiveoview         # simple dashboard for viewing in the browser
#  - owserver          # 1-wire binding using owserver gateway
#  - zwavejs           # ZWave binding using zwave-js
#  - isy99x            # Insteon binding using legacy ISY99 gateway
#  - ipnet             # IP network scanner

#  - openweathermap    # Weather service integration
#  - locate            # Locate people and devices
