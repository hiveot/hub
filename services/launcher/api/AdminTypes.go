// Package launcher with types of service 'Admin' from agent 'launcher'
// DO NOT EDIT. This file is auto generated by tm2go. Any changes will be overwritten.
// Intended for use by both service agents and consumer.
// Generated 16 Aug 2025 08:50 PDT. 
package launcher


//--- Constants ---

// AdminAgentID is the account ID of the agent managing the Thing.
const AdminAgentID = "launcher"

// AdminServiceID is the thingID of the device/service as used by agents.
// Agents use this to publish events and subscribe to actions
const AdminServiceID = "Admin"

// AdminDThingID is the Digitwin thingID as used by consumers. Digitwin adds the dtw:{agent} prefix to the serviceID
// Consumers use this to publish actions and subscribe to events
const AdminDThingID = "dtw:launcher:Admin"

// Property, Event and Action names
const (
    AdminPropNrPlugins = "nrPlugins"
    AdminPropNrRunning = "nrRunning"
    AdminEventStarted = "started"
    AdminEventStopped = "stopped"
    AdminActionStopAllPlugins = "stopAllPlugins"
    AdminActionStopPlugin = "stopPlugin"
    AdminActionListPlugins = "listPlugins"
    AdminActionStartAllPlugins = "startAllPlugins"
    AdminActionStartPlugin = "startPlugin"
)

//--- Schema definitions of Thing 'admin' ---

// PluginInfo defines a Plugin Information data schema.
//
// PluginInfo contains the running status of a service
type PluginInfo struct {
    
    // Uptime with Uptime
    //
    // Time the service is running in seconds.
    Uptime int64 `json:"Uptime,omitempty"`
    
    // Cpu with CPU
    //
    // CPU usage in %. 0 when not running
    Cpu int64 `json:"cpu,omitempty"`
    
    // ExecPath with Path
    //
    // Path to the service executable
    ExecPath string `json:"execPath,omitempty"`
    
    // ModifiedTime with Modified
    //
    // Service modified time ISO8601
    ModifiedTime string `json:"modifiedTime,omitempty"`
    
    // Pid with PID
    //
    // Program PID when started. This remains after stopping.
    Pid int64 `json:"pid,omitempty"`
    
    // PluginID with Plugin ID
    //
    // ID of the service
    PluginID string `json:"pluginID,omitempty"`
    
    // Rss with RSS
    //
    // (Resident Set Size) Memory usage in Bytes. 0 when not running.
    Rss int64 `json:"rss,omitempty"`
    
    // Running with Running
    //
    // Service is currently running
    Running bool `json:"running,omitempty"`
    
    // Size with Size
    //
    // Binary size of the service in bytes
    Size int64 `json:"size,omitempty"`
    
    // StartCount with Start Count
    //
    // Number of times the service was restarted
    StartCount int64 `json:"startCount,omitempty"`
    
    // StartedTime with Start Time
    //
    // Starting time of the service in ISO8601
    StartedTime string `json:"startedTime,omitempty"`
    
    // Status with Status
    //
    // The last status message received from the process
    Status string `json:"status,omitempty"`
    
    // StoppedTime with Stopped Time
    StoppedTime string `json:"stoppedTime,omitempty"`
}

//--- Argument and Response struct for action of Thing 'admin' ---

const AdminListPluginsMethod = "listPlugins"

// AdminListPluginsResp defines the response of the listPlugins function
// List Plugins - List available plugins and their status
// AdminListPluginsResp defines a Plugins data schema.
type AdminListPluginsResp []struct {
    
    // AdminListPluginsResp with Plugin running status
    AdminListPluginsResp PluginInfo
}


const AdminStartAllPluginsMethod = "startAllPlugins"

const AdminStartPluginMethod = "startPlugin"

// AdminStartPluginResp defines the response of the startPlugin function
// Start A Plugin - Start a plugin
// AdminStartPluginResp defines a Plugin Status data schema.
type AdminStartPluginResp PluginInfo


const AdminStopAllPluginsMethod = "stopAllPlugins"

const AdminStopPluginMethod = "stopPlugin"

// AdminStopPluginResp defines the response of the stopPlugin function
// Stop A Plugin - Stop a plugin
// AdminStopPluginResp defines a Plugin Status data schema.
type AdminStopPluginResp PluginInfo



// AdminTD contains the raw TD of this service for publication to the Hub
const AdminTD = `{"actions":{"listPlugins":{"@type":"hiveot:function","description":"List available plugins and their status","title":"List Plugins","idempotent":true,"input":{"title":"Only running","readOnly":false,"type":"bool"},"output":{"title":"Plugins","readOnly":false,"type":"array","items":{"title":"Plugin running status","readOnly":false,"type":"object","schema":"PluginInfo"}},"safe":true},"startAllPlugins":{"@type":"hiveot:function","description":"Start all available plugins","title":"Start All"},"startPlugin":{"@type":"hiveot:function","description":"Start a plugin","title":"Start A Plugin","input":{"title":"Plugin ID","readOnly":false,"type":"string"},"output":{"title":"Plugin Status","readOnly":false,"type":"object","schema":"PluginInfo"}},"stopAllPlugins":{"@type":"hiveot:function","description":"Stop all running plugins","title":"Stop All","input":{"title":"Full Stop","description":"Stop the runtime if running and this launcher. Starting is no longer possible","readOnly":false,"type":"bool"}},"stopPlugin":{"@type":"hiveot:function","description":"Stop a plugin","title":"Stop A Plugin","input":{"title":"Plugin ID","readOnly":false,"type":"string"},"output":{"title":"Plugin Status","readOnly":false,"type":"object","schema":"PluginInfo"}}},"@context":["https://www.w3.org/2022/wot/td/v1.1",{"hiveot":"https://www.hiveot.net/vocab/v0.1"}],"@type":"Service","created":"2025-04-01T17:00:00.000Z","description":"Service for starting and stopping of plugins","events":{"started":{"description":"A plugin was started","title":"Plugin Started","data":{"title":"Plugin ID","readOnly":false,"type":"string"}},"stopped":{"description":"A plugin has stopped","title":"Plugin Stopped","data":{"title":"Plugin ID","readOnly":false,"type":"string"}}},"id":"Admin","modified":"2025-04-01T17:00:00.000Z","properties":{"nrPlugins":{"title":"Number of plugins","readOnly":true,"type":"integer","forms":null},"nrRunning":{"title":"Number of running plugins","readOnly":true,"type":"integer","forms":null}},"schemaDefinitions":{"PluginInfo":{"title":"Plugin Information","description":"PluginInfo contains the running status of a service","readOnly":false,"type":"object","properties":{"Uptime":{"title":"Uptime","description":"Time the service is running in seconds.","readOnly":false,"type":"integer"},"cpu":{"title":"CPU","description":"CPU usage in %. 0 when not running","readOnly":false,"type":"integer","unit":"%"},"execPath":{"title":"Path","description":"Path to the service executable","readOnly":false,"type":"string"},"modifiedTime":{"title":"Modified","description":"Service modified time ISO8601","readOnly":false,"type":"string"},"pid":{"title":"PID","description":"Program PID when started. This remains after stopping.","readOnly":false,"type":"integer"},"pluginID":{"title":"Plugin ID","description":"ID of the service","readOnly":false,"type":"string"},"rss":{"title":"RSS","description":"(Resident Set Size) Memory usage in Bytes. 0 when not running.","readOnly":false,"type":"integer","unit":"Bytes"},"running":{"title":"Running","description":"Service is currently running","readOnly":false,"type":"bool"},"size":{"title":"Size","description":"Binary size of the service in bytes","readOnly":false,"type":"integer"},"startCount":{"title":"Start Count","description":"Number of times the service was restarted","readOnly":false,"type":"integer"},"startedTime":{"title":"Start Time","description":"Starting time of the service in ISO8601","readOnly":false,"type":"string"},"status":{"title":"Status","description":"The last status message received from the process","readOnly":false,"type":"string"},"stoppedTime":{"title":"Stopped Time","readOnly":false,"type":"string"}}}},"security":null,"securityDefinitions":null,"title":"Administration of Plugins"}`