// Package launcher with the agent request handler for using service 'Admin'
// This builds a service consumer that send a service request.
// DO NOT EDIT. This file is auto generated by tm2go. Any changes will be overwritten.
// Generated 13 Oct 2025 14:21 PDT. 
package launcher

import "github.com/hiveot/hub/messaging"


// AdminListPlugins client method - List Plugins.
// List available plugins and their status
func AdminListPlugins(hc *messaging.Consumer, onlyrunning bool)(plugins []PluginInfo, err error){
    
    err = hc.Rpc("invokeaction", AdminDThingID, AdminListPluginsMethod, &onlyrunning, &plugins)
    return
}

// AdminStartAllPlugins client method - Start All.
// Start all available plugins
func AdminStartAllPlugins(hc *messaging.Consumer)(err error){
    
    err = hc.Rpc("invokeaction", AdminDThingID, AdminStartAllPluginsMethod, nil, nil)
    return
}

// AdminStartPlugin client method - Start A Plugin.
// Start a plugin
func AdminStartPlugin(hc *messaging.Consumer, pluginID string)(pluginStatus PluginInfo, err error){
    
    err = hc.Rpc("invokeaction", AdminDThingID, AdminStartPluginMethod, &pluginID, &pluginStatus)
    return
}

// AdminStopAllPlugins client method - Stop All.
// Stop all running plugins
func AdminStopAllPlugins(hc *messaging.Consumer, fullStop bool)(err error){
    
    err = hc.Rpc("invokeaction", AdminDThingID, AdminStopAllPluginsMethod, &fullStop, nil)
    return
}

// AdminStopPlugin client method - Stop A Plugin.
// Stop a plugin
func AdminStopPlugin(hc *messaging.Consumer, pluginID string)(pluginStatus PluginInfo, err error){
    
    err = hc.Rpc("invokeaction", AdminDThingID, AdminStopPluginMethod, &pluginID, &pluginStatus)
    return
}
