<!--RenderInputValue.gohtml renders the input field for use in a form.
    '.' is an InteractionOutput with Schema and Data to edit.


    Currently only native types are supported, eg text, boolean
 -->

{{- /*gotype:github.com/hiveot/hub/wot/consumedthing.InteractionInput*/ -}}

{{$minmax := ""}}
{{$iv := .Value.Text}}

{{if not .Schema}}
{{else if .Schema.Enum }}
    {{/*	=== Enum Selection Input ===*/}}
    {{/* add a select with list of options for the .DataSchema.Enum values */}}
		<select id="input-{{.Name}}" name="{{.Name}}" autofocus>
        {{ range $enumValue := .Schema.Enum}}
					<option {{if eq $enumValue $iv}} selected {{end}}>
              {{$enumValue}}
					</option>
        {{end}}
		</select>
		<small>Current value: {{$iv}}  (Default: {{.Schema.Default}})</small>

{{else if eq .Schema.Type "number"}}
    {{/*	=== Numeric Input ===*/}}
    {{if .Schema.Minimum}}
        {{/*FIXME: don't hard code rounding*/}}
        {{$minmax = printf " [%0.01f-%0.01f]" .Schema.Minimum .Schema.Maximum }}
    {{end}}
		<input id="input-{{.Name}}" name="{{.Name}}"
		       autofocus autocomplete="off" type="number"
		       value="{{$iv}}"
		/>
		<small>Current value: {{.Value.Text}} {{.Schema.Unit}} {{$minmax}} </small>

{{else if eq .Schema.Type "integer"}}
    {{/*	=== Integer Input ===*/}}
    {{if .Schema.Minimum}}
        {{$minmax = printf " [%d-%d]" .Schema.Minimum .Schema.Maximum }}
    {{end}}
		<input id="input-{{.Name}}" name="{{.Name}}"
		       autofocus autocomplete="off" type="number"
		       value="{{$iv}}"
		/>
		<small>Current value: {{.Value.Text}} {{.Schema.Unit}} {{$minmax}}</small>

{{else if eq .Schema.Type "boolean"}}
    {{/*	=== Switch Input ===*/}}
{{/*    <h-switch name="value" off="Off" on="On" value="{{$iv}}"></h-switch>*/}}
	  <input id="input-{{.Name}}" name="{{.Name}}"
	         style="margin-left:10px; margin-right:10px"
	         type="checkbox" role="switch" aria-invalid="false" autofocus
            {{if eq $iv "true"}} checked {{end}}
	  />
{{else if eq .Schema.Type "string"}}
    {{/*	=== Text Input ===*/}}
		<input id="input-{{.Name}}" name="{{.Name}}"
		       type="text" autofocus
		/>
{{else}}
    {{/*	=== Complex Input is not supported ===*/}}
		<input id="input-{{.Name}}" name="{{.Name}}"
		       disabled
		       style="color:red; border:red"
		       value="Multi-value input forms are not yet supported" />
{{end}}

