{{/*Edit Thing Configuration Modal*/}}
{{- /*gotype:github.com/hiveot/hub/services/hiveoview/src/views/thing.RenderEditPropertyTemplateData*/ -}}


<h-modal show showClose shadow>
	<article>
		<header class="h-row-centered" style="height: 60px">
			<h3 style="margin:0">Edit Configuration</h3>
		</header>
		<form id="edit-config-form">

			<label for="propertyDescription">Property</label>
        {{/* textarea doesnt resize so do this instead*/}}
			<div id="propertyDescription"
			     style="color:gray;
                     border:1px solid var(--pico-form-element-border-color);
                     padding: var(--pico-form-element-spacing-vertical) var(--pico-form-element-spacing-horizontal);
                     margin-bottom: var(--pico-spacing);"
				><i>{{or .DataSchema.Description .DataSchema.Title}}</i>
			</div>

			<label>{{.DataSchema.Title}}</label>
      {{template "RenderInputValue.gohtml" .PropertyInput}}

		</form>

		{{/* Show the progress bar after submit*/}}
		<span>
			<progress id="edit-progress-bar" style="visibility:hidden; position:absolute;left:1px;width:99%;border-radius:0"></progress>
			<p id="edit-progress-error" style="visibility:hidden; color:red">error</p>
		</span>

		<footer style="margin-top:1px">
        {{- /*close-modal is handled by h-modal component*/ -}}
			<button id="cancelBtn"
			        onclick="this.dispatchEvent(new Event('close-modal',{bubbles:true}))"
			        class="secondary">Cancel
			</button>
			<button type="submit"
			        hx-post="{{.SubmitPropertyPath}}"
			        hx-include="#edit-config-form"
			        hx-swap="none"
			        hx-on::before-request="showProgress(this)"
			        hx-on::after-request="onSubmitCompleted(event, this)"
			        style="margin-bottom: 0">Submit
			</button>
		</footer>

	</article>

</h-modal>

<script>
    // disable the submit button and show the progress bar
    function showProgress(submitBtn) {
        submitBtn.disabled = true
        let el = document.getElementById("edit-progress-bar")
				el.style.visibility = "visible"
		}

    // close the modal when completed or present an error
    function onSubmitCompleted(ev, submitBtn) {
        ev.stopImmediatePropagation()
        let details = ev.detail
		    // console.log("details",details)
        if (details.successful) {
            let closeEv = new Event('close-modal',{bubbles:true})
            submitBtn.dispatchEvent(closeEv)
		        return
        }
        // submit failed, show the error
        submitBtn.disabled = false
        // hide the progress bar
        let el = document.getElementById("edit-progress-bar")
        el.style.visibility = "hidden"

		    // show the error instead
        let el2 = document.getElementById("edit-progress-error")
        el2.style.visibility = "visible"
		    el2.textContent=ev.detail.xhr.response
    }
</script>