{{- /*gotype:github.com/hiveot/hub/services/hiveoview/src/views/app.AppHeadTemplateData*/ -}}

{{if not .Ready}}

	<nav class="container-fluid h-row"
	     hx-trigger="load"
	     hx-get="/app/appHead"
	     hx-target="#appHead"
	     hx-swap="innerHTML">
	</nav>

{{else}}


<nav class="container-fluid  h-row" style="height:60px">
		<a href="{{.RenderAppAboutPath}}"
		   hx-get="{{.RenderAppAboutPath}}"
		   hx-target="#aboutPage"
		   hx-on::after-request="window.navigateTo(event,this.href)"
		>
			<h-brand title="HiveOT" logo="{{.Logo}}"></h-brand>
		</a>

		<!-- === Tabs for selecting (not loading) application pages === -->
		<!-- The h-navbar css highlights the li with class 'h-target', set by selectURLTargets() -->
		<ul class="h-navbar h-show-sm " style="height:100%;
				border: 1px solid var(--pico-accordion-border-color)">
			{{/*	The navigation buttons both select and reload the page*/}}
			{{range .AppHeadDashboards}}
				<li class="h-row">
					<a href="{{.RenderDashboardPath}}"
				       hx-get="{{.RenderDashboardPath}}"
				       hx-target="#dashboardPage"
				       hx-on::after-request="window.navigateTo(event,this.href)"
				       hx-swap="innerHTML"
						>
							{{.Title}}
					</a>
          {{template "dashboardMenu.gohtml" .}}
				</li>
				<div class="h-vertical-divider"></div>
			{{end}}

			<li class="h-row">
				{{/*counteract margin-right: -8*/}}
				<a style="margin-right:0"
								href="{{.RenderDirectoryPath}}"
			       hx-get="{{.RenderDirectoryPath}}"
			       hx-target="#directoryPage"
			       hx-on::after-request="window.navigateTo(event,this.href)"
			       hx-swap="innerHTML"
				>
					Directory</a>
			</li>
		</ul>

		<!-- spacer -->
		<div class="h-grow"></div>

		<!-- === Dark/Light Theme Toggle === -->
		<h-dark-toggle></h-dark-toggle>

		<!-- === Connection Status Indicator using htmx === -->
      {{template "RenderConnectStatus.gohtml" .}}

      {{template "RenderAppMenu.gohtml" .}}

	</nav>


	<div id="dashboardMenuDialog"></div>

	<style>
      .container-fluid {
          background-color: var(--pico-card-background-color);
		      border-bottom:1px solid var(--pico-card-border-color);
      }

      .app-head {
          /*just some testing for pixel perfect placement??*/
          /*margin-top: -1px;*/
          /*padding-top: 1px;*/
      }
	</style>
{{end}}
