<!-- Render dashboard config editor -->

{{- /*gotype:github.com/hiveot/hub/services/hiveoview/src/views/dashboard.RenderEditDashboardTemplateData*/ -}}

<h-modal id="editDashModal"
         show showClose shadow style="max-width:90vw; max-height: 90vh"
>
	<article style="max-width:90vw; max-height: 90vh">
		<header class="h-row-centered">
			<h3>Dashboard Configuration</h3>
		</header>

      {{/*	Use hx-post in form to submit on enter*/}}
		<form tabindex="0" id="edit-dashboard-form"
		      hx-post="{{.SubmitDashboard}}"
		      hx-swap="none"
		      hx-vals='js:{"background":getImage()}'
		      style="overflow: hidden; display:flex;flex-direction: column"
		      hx-on::after-request="onSubmitCompleted(event, this)"
		>
			<div>
				<label>Dashboard Name
					<input id="dashboard-title-id" type="text" name="title" autofocus tabindex="0"
					       value="{{.Dashboard.Title}}"/>
				</label>
			</div>

        {{/*Enable/disable background image*/}}
			<label>
				<input id="background-enabled" type="checkbox" name="backgroundEnabled"
               {{if .Dashboard.BackgroundEnabled}}checked{{end}}
							 >
				Background Image
			</label>

        {{/* fields for background image selection*/}}
			<fieldset id="bgEnabledSection" class="h-col" {{if not .Dashboard.BackgroundEnabled}} disabled {{end}}>
				<fieldset role="group">
					<label>URL
						<input id="sourceURL" type="url" name="sourceURL" placeholder="Enter a source image URL"
						       value="{{.Dashboard.SourceURL}}">
					</label>
				</fieldset>

				<fieldset role="group">
					<label>Reload interval when using URL
						<input type="number" name="reloadInterval" placeholder="Reload interval in seconds"
						       value="{{.Dashboard.ReloadInterval}}">
					</label>
				</fieldset>
				or
          {{/* Upload a file*/}}
				<fieldset role="group">
					<input id="background-file-input-id" type="file"
					       accept=".png, .jpg, .jpeg"
					       onchange="handleSelectFile(this)">
					<button type="reset" onclick="clearBackground()">Clear</button>
				</fieldset>

          {{/*Hidden input containing the actual background for form submission
			 This is set to base64 image or URL. Unlike img this can be empty */}}
				<input id="background-stored" name="backgroundStored" type="hidden"
				       value="{{.Dashboard.BackgroundImage}}">

          {{/* Current selected image for presentation only */}}
          {{/* overflow hidden with object-fit cover, crops the image to fill the available area*/}}
          {{/* Without object-fit the image doesnt preserve aspect ratio*/}}
				<img type="image" id="background-shown" alt="background image"
				     src="{{.BackgroundImageURL}}"
				     style="object-fit:cover;overflow:hidden; max-height: 50vh; width:50vw"
				/>
			</fieldset>
		</form>

		<footer class="h-row">
        {{- /*close-modal is handled by h-modal component*/ -}}
			<button id="cancelBtn"
			        onclick="this.dispatchEvent(new Event('close-modal',{bubbles:true}))"
			        class="secondary">Cancel
			</button>
        {{/* Use hx-post in button to submit on button click*/}}
			<button type="submit"
			        form="edit-dashboard-form"
			        style="margin-bottom: 0">Submit
			</button>
		</footer>

	</article>

</h-modal>


<script >

		console.log("editDashboard swapped in")

		// enable/disable the background section when the 'Background Image' checkbox is toggled
		document.getElementById("background-enabled").addEventListener("change", (ev)=>{
            let bgSection = document.getElementById("bgEnabledSection")
            bgSection.disabled = !ev.target.checked
             console.log("background-enabled triggered")
		})

    // const noImage = '<svg width="800px" height="800px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7.828 5l-1-1H22v15.172l-1-1v-.69l-3.116-3.117-.395.296-.714-.714.854-.64a.503.503 0 0 1 .657.046L21 16.067V5zM3 20v-.519l2.947-2.947a1.506 1.506 0 0 0 .677.163 1.403 1.403 0 0 0 .997-.415l2.916-2.916-.706-.707-2.916 2.916a.474.474 0 0 1-.678-.048.503.503 0 0 0-.704.007L3 18.067V5.828l-1-1V21h16.172l-1-1zM17 8.5A1.5 1.5 0 1 1 15.5 7 1.5 1.5 0 0 1 17 8.5zm-1 0a.5.5 0 1 0-.5.5.5.5 0 0 0 .5-.5zm5.646 13.854l.707-.707-20-20-.707.707z"/><path fill="none" d="M0 0h24v24H0z"/></svg>'

    // when the edit dialog is loaded, reload the image from URL and update the stored image
    document.getElementById("editDashModal")
        .addEventListener('ready', () => {
            let bgStored = document.getElementById("background-stored")
            let bgShown = document.getElementById("background-shown");
            let sourceURL = document.getElementById("sourceURL");
            // console.log("editDashModal is ready. url=", imageShown.src)
            bgShown.addEventListener('error', () => {
                bgShown.alt = "Failed loading " + bgShown.src
                console.error("error: load image error. source:", bgShown.src)
            })

            // recover load the image source from URL if background differs
            // this means something went wrong
            if (sourceURL.value && sourceURL.value !== bgShown.src) {
                debugger
                bgShown.src = sourceURL.value
            }

        })

    function clearBackground() {
        // elements to update
        let bgStored = document.getElementById("background-stored")
        let bgShown = document.getElementById("background-shown");

        // fixme: an image should only be shown when there is a file or URL to show
        // another reason to dislike html. Can't clear an img.
        const noImage = '<svg width="800px" height="800px" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M7.828 5l-1-1H22v15.172l-1-1v-.69l-3.116-3.117-.395.296-.714-.714.854-.64a.503.503 0 0 1 .657.046L21 16.067V5zM3 20v-.519l2.947-2.947a1.506 1.506 0 0 0 .677.163 1.403 1.403 0 0 0 .997-.415l2.916-2.916-.706-.707-2.916 2.916a.474.474 0 0 1-.678-.048.503.503 0 0 0-.704.007L3 18.067V5.828l-1-1V21h16.172l-1-1zM17 8.5A1.5 1.5 0 1 1 15.5 7 1.5 1.5 0 0 1 17 8.5zm-1 0a.5.5 0 1 0-.5.5.5.5 0 0 0 .5-.5zm5.646 13.854l.707-.707-20-20-.707.707z"/><path fill="none" d="M0 0h24v24H0z"/></svg>'
				bgStored.value = undefined
        bgShown.src = noImage
    }

    function getImage() {
        let shownImage = document.getElementById("background-shown");
        return shownImage.src
    }

    // upload an image file and embed it in base64 and clear the URL
    // todo: make a web component for this
    function handleSelectFile(input) {
        if (input.files.length === 0) {
            return
        }
        let bgStored = document.getElementById("background-stored")
        let bgShown = document.getElementById("background-shown");
        let sourceURL = document.getElementById("sourceURL");
        const selectedFile = input.files[0]
        let reader = new FileReader();
        reader.onloadend = function () {
            bgShown.src = reader.result
            bgStored.value = reader.result
            sourceURL.value = ""
        };
        reader.readAsDataURL(selectedFile)
    }

    // Ugly to have to do this!
    function onSubmitCompleted(ev, btn) {
        ev.stopImmediatePropagation()
        console.log("Submitted dashboard changes")
        let closeEv = new Event('close-modal', {bubbles: true})
        btn.dispatchEvent(closeEv)
    }
</script>

