/**
 * Table web component with minimal boilerplate and simple styling.
 *
 *
 *  Example:
 *  <h-data id="data1">
 *    {jsondata row 1}
 *    {jsondata row 2}
 *  </h-data>
 *  <h-simple-table data="#data1" sort="col1">
 *    <li id="col1" title="Column1" Field="datafield1" field-type="text"></li>
 *    <li id="col2" title="Column2" Field="datafield2" field-type="number"></li>
 *  </h-simple-table>
 */
const template = document.createElement('template')
template.innerHTML = `
<table>
    <thead>
        <tr columns>
            <slot name="columns">missing columns</slot>
        </tr>
    </thead>
    <tbody rows>    
        <slot></slot>
    </tbody>
</table>
`

class HSimpleTable extends HTMLElement {

    constructor() {
        super();
        const shadowRoot = this.attachShadow({mode: "open"});
        shadowRoot.append(template.content.cloneNode(true));
    }

    static get observedAttributes() {
        return [""];
    }

    attributeChangedCallback(name, oldValue, newValue) {
        // console.log("attributeChangedCallback: " + name + "=" + newValue);
    }

    connectedCallback() {
    }
}

customElements.define('h-simple-table', HSimpleTable)


const template2 = document.createElement('template')
template2.innerHTML = `
<td><slot></slot></td>
`

class HTableColumn extends HTMLElement {

    constructor() {
        super();
        const shadowRoot = this.attachShadow({mode: "open"});
        shadowRoot.append(template2.content.cloneNode(true));
    }
}

customElements.define('h-table-column', HTableColumn)


const template3 = document.createElement('template')
template3.innerHTML = `
<tr><slot></slot></tr>
`

class HTableRow extends HTMLElement {

    constructor() {
        super();
        const shadowRoot = this.attachShadow({mode: "open"});
        shadowRoot.append(template3.content.cloneNode(true));
    }
}

customElements.define('h-table-row', HTableRow)


const template4 = document.createElement('template')
template4.innerHTML = `
<td><slot></slot></td>
`

class HTableCell extends HTMLElement {

    constructor() {
        super();
        const shadowRoot = this.attachShadow({mode: "open"});
        shadowRoot.append(template4.content.cloneNode(true));
    }
}

customElements.define('h-table-cell', HTableCell)
