// Package authz with the agent request handler for using service 'User'
// This builds a service agent that calls the service.
// DO NOT EDIT. This file is auto generated by td2go. Any changes will be overwritten.
// Generated 31 Jan 2025 21:43 PST.
package authz

import "errors"
import "github.com/hiveot/hub/messaging/tputils"
import "github.com/hiveot/hub/messaging"

// IUserService defines the interface of the 'User' service
//
// This defines a method for each of the actions in the TD.
type IUserService interface {

	// SetPermissions Set Permissions
	// Set the roles that can use a Thing or service
	SetPermissions(senderID string, permissions ThingPermissions) error
}

// NewHandleUserRequest returns an agent handler for Thing 'user' requests.
//
// This unmarshalls the request payload into an args struct and passes it to the service
// that implements the corresponding interface method.
//
// This returns the marshalled response data or an error.
func NewHandleUserRequest(svc IUserService) func(msg *messaging.RequestMessage, c messaging.IConnection) *messaging.ResponseMessage {
	return func(msg *messaging.RequestMessage, c messaging.IConnection) *messaging.ResponseMessage {
		var output any
		var err error
		switch msg.Name {
		case "setPermissions":
			var args ThingPermissions
			err = tputils.DecodeAsObject(msg.Input, &args)
			if err == nil {
				err = svc.SetPermissions(msg.SenderID, args)
			} else {
				err = errors.New("bad function argument: " + err.Error())
			}
			break
		default:
			err = errors.New("Unknown Method '" + msg.Name + "' of service '" + msg.ThingID + "'")
		}
		return msg.CreateResponse(output, err)
	}
}
