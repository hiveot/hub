// Package digitwin with types of service 'ThingValues' from agent 'digitwin'
// DO NOT EDIT. This file is auto generated by td2go. Any changes will be overwritten.
// Intended for use by both service agents and consumer.
// Generated 29 Jan 2025 07:58 PST. 
package digitwin


//--- Constants ---

// ThingValuesAgentID is the account ID of the agent managing the Thing.
const ThingValuesAgentID = "digitwin"

// ThingValuesServiceID is the thingID of the device/service as used by agents.
// Agents use this to publish events and subscribe to actions
const ThingValuesServiceID = "ThingValues"

// ThingValuesDThingID is the Digitwin thingID as used by consumers. Digitwin adds the dtw:{agent} prefix to the serviceID
// Consumers use this to publish actions and subscribe to events
const ThingValuesDThingID = "dtw:digitwin:ThingValues"

// Property, Event and Action names
const (
    ThingValuesEventProgress = "progress"
    ThingValuesActionQueryAction = "queryAction"
    ThingValuesActionReadAllEvents = "readAllEvents"
    ThingValuesActionReadAllProperties = "readAllProperties"
    ThingValuesActionReadEvent = "readEvent"
    ThingValuesActionReadProperty = "readProperty"
)

//--- Schema definitions of Thing 'thingValues' ---

// ActionStatus defines a Action Status data schema of the  agent.
//
// Status of the last action
type ActionStatus struct {
    
    // AgentID with Agent ID
    //
    // The agent handling the action
    AgentID string `json:"agentID,omitempty"`
    
    // CorrelationID with Request ID
    //
    // The action request identifier
    CorrelationID string `json:"correlationID,omitempty"`
    
    // Error with Error
    //
    // Action error info when failed
    Error string `json:"error,omitempty"`
    
    // Input with Action input
    //
    // Action input value
    Input any `json:"input,omitempty"`
    
    // Name with Action name
    //
    // name of the action or property
    Name string `json:"name,omitempty"`
    
    // Output with Action output
    Output any `json:"output,omitempty"`
    
    // SenderID with Consumer ID
    SenderID string `json:"senderID,omitempty"`
    
    // Status with Action status
    //
    // Status of the action's progress
    Status string `json:"status,omitempty"`
    
    // ThingID with Action Thing
    //
    // Digital twin ThingID the action applies to
    ThingID string `json:"thingID,omitempty"`
    
    // TimeRequested with Creation Time
    //
    // Time the action was initially requested
    TimeRequested string `json:"timeRequested,omitempty"`
    
    // TimeUpdated with Updated time
    //
    // Time the action status was last updated
    TimeUpdated string `json:"timeUpdated,omitempty"`
}

// ThingValue defines a Thing Value data schema of the  agent.
//
// Property or event value
type ThingValue struct {
    
    // Name with Name
    //
    // Name of the property holding the value
    Name string `json:"name,omitempty"`
    
    // Output with Payload
    //
    // Data in format as described by the thing's property affordance
    Output any `json:"output,omitempty"`
    
    // ThingID with Thing ID
    //
    // Digital twin Thing ID
    ThingID string `json:"thingID,omitempty"`
    
    // Updated with Updated time
    //
    // Time the value was last updated
    Updated string `json:"updated,omitempty"`
}

//--- Argument and Response struct for action of Thing 'thingValues' ---

const ThingValuesQueryActionMethod = "queryAction"

// ThingValuesQueryActionArgs defines the arguments of the queryAction function
// Action status - Read the current action status of a Thing
type ThingValuesQueryActionArgs struct {
    
    // Name with Action Name
    //
    // The action name to query
    Name string `json:"name,omitempty"`
    
    // ThingID with Thing ID
    //
    // ID of the Thing to query
    ThingID string `json:"thingID,omitempty"`
}

const ThingValuesReadAllEventsMethod = "readAllEvents"

const ThingValuesReadAllPropertiesMethod = "readAllProperties"

const ThingValuesReadEventMethod = "readEvent"

// ThingValuesReadEventArgs defines the arguments of the readEvent function
// Read event value - Read the latest event value of a Thing
type ThingValuesReadEventArgs struct {
    
    // Name with Event name
    //
    // Name of the event to read the latest values
    Name string `json:"name,omitempty"`
    
    // ThingID with Thing ID
    //
    // ID of the Thing to read
    ThingID string `json:"thingID,omitempty"`
}

const ThingValuesReadPropertyMethod = "readProperty"

// ThingValuesReadPropertyArgs defines the arguments of the readProperty function
// Read property value - Read the latest property value
type ThingValuesReadPropertyArgs struct {
    
    // Name with Property name
    //
    // The property name whose value to read
    Name string `json:"name,omitempty"`
    
    // ThingID with Thing ID
    //
    // ID of the Thing to read
    ThingID string `json:"thingID,omitempty"`
}


// ThingValuesTD contains the raw TD of this service for publication to the Hub
const ThingValuesTD = `{"actions":{"queryAction":{"@type":"hiveot:function","description":"Read the current action status of a Thing","title":"Action status","idempotent":true,"input":{"readOnly":false,"type":"object","properties":{"name":{"title":"Action Name","description":"The action name to query","readOnly":false,"type":"string"},"thingID":{"title":"Thing ID","description":"ID of the Thing to query","readOnly":false,"type":"string"}},"required":["thingID","name"]},"output":{"title":"Action value","description":"The latest action value","readOnly":false,"type":"ActionStatus"},"safe":true},"readAllEvents":{"@type":"hiveot:function","description":"Read the latest known event values of a Thing","title":"Read all event values","idempotent":true,"input":{"title":"Thing ID","description":"ID of the Thing to read","readOnly":false,"type":"string"},"output":{"title":"Event values","description":"List with the most recent event value objects","readOnly":false,"type":"array","items":{"title":"Event value","readOnly":false,"type":"ThingValue"}},"safe":true},"readAllProperties":{"@type":"hiveot:function","description":"Read the latest known property values","title":"Read all properties","idempotent":true,"input":{"title":"Thing ID","description":"Digital twin ID of the Thing to read","readOnly":false,"type":"string"},"output":{"title":"Property values","description":"List of ThingValue objects","readOnly":false,"type":"array","items":{"title":"Property Value","readOnly":false,"type":"ThingValue"}},"safe":true},"readEvent":{"@type":"hiveot:function","description":"Read the latest event value of a Thing","title":"Read event value","idempotent":true,"input":{"readOnly":false,"type":"object","properties":{"name":{"title":"Event name","description":"Name of the event to read the latest values","readOnly":false,"type":"string"},"thingID":{"title":"Thing ID","description":"ID of the Thing to read","readOnly":false,"type":"string"}},"required":["thingID","name"]},"output":{"title":"Event value","description":"Most recent event value","readOnly":false,"type":"ThingValue"},"safe":true},"readProperty":{"@type":"hiveot:function","description":"Read the latest property value","title":"Read property value","idempotent":true,"input":{"readOnly":false,"type":"object","properties":{"name":{"title":"Property name","description":"The property name whose value to read","readOnly":false,"type":"string"},"thingID":{"title":"Thing ID","description":"ID of the Thing to read","readOnly":false,"type":"string"}},"required":["thingID","name"]},"output":{"title":"Property value","description":"Most recent property value","readOnly":false,"type":"ThingValue"},"safe":true}},"@context":["https://www.w3.org/2022/wot/td/v1.1",{"hiveot":"https://www.hiveot.net/vocab/v0.1"}],"@type":"Service","created":"2024-10-04T17:00:00.000Z","deny":["none"],"description":"Service for providing the last known property, event and action values","events":{"progress":{"description":"Progress notification of a property write or thing action request","title":"Progress","data":{"readOnly":false,"type":"object","properties":{"correlationID":{"title":"Message ID","description":"link to action or property write that triggered the update","readOnly":false,"type":"string"},"data":{"title":"Data","description":"Input value in format as described by the thing's property affordance","readOnly":false,"type":"any"},"id":{"title":"Thing ID","description":"Thing ID of thing whose value is updated","readOnly":false,"type":"string"},"messageType":{"title":"Message Type","description":"Type of change request","enum":["action","property"],"readOnly":false,"type":"string"},"name":{"title":"Property name","description":"Name of the property or action the notification applies to","readOnly":false,"type":"string"},"senderID":{"title":"Sender ID","description":"ID of the sender of the request","readOnly":false,"type":"string"},"status":{"title":"Progress status","description":"The new status of the update progress.","readOnly":false,"type":"string"},"statusInfo":{"title":"Additional status information","readOnly":false,"type":"string"}}}}},"id":"ThingValues","modified":"2024-10-04T17:00:00.000Z","properties":null,"schemaDefinitions":{"ActionStatus":{"title":"Action Status","description":"Status of the last action","readOnly":false,"type":"object","properties":{"agentID":{"title":"Agent ID","description":"The agent handling the action","readOnly":false,"type":"string"},"correlationID":{"title":"Request ID","description":"The action request identifier","readOnly":false,"type":"string"},"error":{"title":"Error","description":"Action error info when failed","readOnly":false,"type":"string"},"input":{"title":"Action input","description":"Action input value","readOnly":false,"type":"any"},"name":{"title":"Action name","description":"name of the action or property","readOnly":false,"type":"string"},"output":{"title":"Action output","readOnly":false,"type":"any"},"senderID":{"title":"Consumer ID","readOnly":false,"type":"string"},"status":{"title":"Action status","description":"Status of the action's progress","readOnly":false,"type":"string"},"thingID":{"title":"Action Thing","description":"Digital twin ThingID the action applies to","readOnly":false,"type":"string"},"timeRequested":{"title":"Creation Time","description":"Time the action was initially requested","readOnly":false,"type":"dateTime"},"timeUpdated":{"title":"Updated time","description":"Time the action status was last updated","readOnly":false,"type":"dateTime"}}},"ThingValue":{"title":"Thing Value","description":"Property or event value","readOnly":false,"type":"object","properties":{"name":{"title":"Name","description":"Name of the property holding the value","readOnly":false,"type":"string"},"output":{"title":"Payload","description":"Data in format as described by the thing's property affordance","readOnly":false,"type":"any"},"thingID":{"title":"Thing ID","description":"Digital twin Thing ID","readOnly":false,"type":"string"},"updated":{"title":"Updated time","description":"Time the value was last updated","readOnly":false,"type":"dateTime"}}}},"security":["bearer"],"securityDefinitions":{"bearer":{"description":"HTTP protocol authentication","scheme":"bearer","name":"authentication","alg":"es256","format":"jwt","in":"header"}},"title":"DigiTwin Values Service","support":"https://www.github.com/hiveot/hub"}`