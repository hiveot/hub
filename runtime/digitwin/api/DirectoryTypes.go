// Package digitwin with types of service 'ThingDirectory' from agent 'digitwin'
// DO NOT EDIT. This file is auto generated by tm2go. Any changes will be overwritten.
// Intended for use by both service agents and consumer.
// Generated 13 Oct 2025 14:19 PDT. 
package digitwin


//--- Constants ---

// ThingDirectoryAgentID is the account ID of the agent managing the Thing.
const ThingDirectoryAgentID = "digitwin"

// ThingDirectoryServiceID is the thingID of the device/service as used by agents.
// Agents use this to publish events and subscribe to actions
const ThingDirectoryServiceID = "ThingDirectory"

// ThingDirectoryDThingID is the Digitwin thingID as used by consumers. Digitwin adds the dtw:{agent} prefix to the serviceID
// Consumers use this to publish actions and subscribe to events
const ThingDirectoryDThingID = "dtw:digitwin:ThingDirectory"

// Property, Event and Action names
const (
    ThingDirectoryPropThings = "things"
    ThingDirectoryEventThingDeleted = "thingDeleted"
    ThingDirectoryEventThingUpdated = "thingUpdated"
    ThingDirectoryActionCreateThing = "createThing"
    ThingDirectoryActionDeleteThing = "deleteThing"
    ThingDirectoryActionRetrieveThing = "retrieveThing"
    ThingDirectoryActionRetrieveAllThings = "retrieveAllThings"
    ThingDirectoryActionUpdateThing = "updateThing"
)
//--- Argument and Response struct for action of Thing 'ThingDirectory' ---

const ThingDirectoryCreateThingMethod = "createThing"

const ThingDirectoryDeleteThingMethod = "deleteThing"

const ThingDirectoryRetrieveAllThingsMethod = "retrieveAllThings"

// ThingDirectoryRetrieveAllThingsArgs defines the arguments of the retrieveAllThings function
// Read all TDs - Read a batch of TD documents
type ThingDirectoryRetrieveAllThingsArgs struct {
    
    // Limit with Limit
    //
    // Maximum number of documents to return
    Limit int64 `json:"limit,omitempty"`
    
    // Offset with Offset
    //
    // Start index in the list of TD documents
    Offset int64 `json:"offset,omitempty"`
}

// ThingDirectoryRetrieveAllThingsResp defines the response of the retrieveAllThings function
// Read all TDs - Read a batch of TD documents
//
// List of JSON encoded TD documents
// ThingDirectoryRetrieveAllThingsResp defines a TD list data schema.
//
// List of JSON encoded TD documents
type ThingDirectoryRetrieveAllThingsResp []struct {
    
    // ThingDirectoryRetrieveAllThingsResp with 
    ThingDirectoryRetrieveAllThingsResp string `json:"ThingDirectoryRetrieveAllThingsResp,omitempty"`
}


const ThingDirectoryRetrieveThingMethod = "retrieveThing"

const ThingDirectoryUpdateThingMethod = "updateThing"


// ThingDirectoryTD contains the raw TD of this service for publication to the Hub
const ThingDirectoryTD = `{"actions":{"createThing":{"description":"Update the Thing TD in the directory. For use by Thing agents only.","forms":[{"additionalResponses":[{"contentType":"application/problem+json","description":"Invalid serialization or TD","htv:statusCodeValue":400}],"href":"/things/{id}","htv:methodName":"PUT","response":{"description":"Success response","htv:statusCodeValue":201}}],"title":"Create Thing TD","uriVariables":{"id":{"readOnly":false,"type":"string"}},"idempotent":true,"input":{"title":"TD JSON","description":"Device TD document in JSON format","readOnly":false,"type":"string"}},"deleteThing":{"description":"Remove a digital twin TD from the directory","forms":[{"additionalResponses":[{"contentType":"application/problem+json","description":"TD with the given id not found","htv:statusCodeValue":404}],"href":"/things/{id}","htv:methodName":"DELETE","response":{"description":"Success response","htv:statusCodeValue":204}}],"title":"Delete Thing","uriVariables":{"id":{"readOnly":false,"type":"string"}},"idempotent":true,"input":{"title":"dThing ID","readOnly":false,"type":"string"}},"retrieveAllThings":{"description":"Read a batch of TD documents","forms":[{"additionalResponses":[{"contentType":"application/problem+json","description":"Invalid serialization or TD","htv:statusCodeValue":400}],"contentType":"application/td+json","href":"/things","htv:methodName":"GET","response":{"description":"Success response","htv:statusCodeValue":204}}],"title":"Read all TDs","idempotent":true,"input":{"readOnly":false,"type":"object","properties":{"limit":{"title":"Limit","description":"Maximum number of documents to return","default":100,"readOnly":false,"type":"integer","minimum":1},"offset":{"title":"Offset","description":"Start index in the list of TD documents","default":0,"readOnly":false,"type":"integer"}}},"output":{"title":"TD list","description":"List of JSON encoded TD documents","readOnly":false,"type":"array","items":{"readOnly":false,"type":"string"}},"safe":true},"retrieveThing":{"description":"Return a JSON encoded TD document","forms":[{"comments":["Additional http endpoint as per spec to read a TD.","Use URI variable as second method of input","The alternative endpoint is /things/invokeaction/retrieveThing with payload the thingID"],"href":"/things/{id}","htv:methodName":"GET"}],"title":"Retrieve a TD","uriVariables":{"id":{"title":"Thing Description ID","readOnly":false,"type":"string"}},"idempotent":true,"input":{"title":"Thing ID","description":"Digital-Twin Thing ID of the Thing to read","readOnly":false,"type":"string"},"output":{"title":"TD","description":"A JSON encoded Thing Description Document","readOnly":false,"type":"string"},"safe":true},"updateThing":{"description":"Update the Thing TD in the directory. For use by agents only.","forms":[{"additionalResponses":[{"contentType":"application/problem+json","description":"Invalid serialization or TD","htv:statusCodeValue":400}],"contentType":"application/td+json","href":"/things/{id}","htv:methodName":"PUT","response":{"description":"Success response","htv:statusCodeValue":204}}],"title":"Update Thing TD","uriVariables":{"id":{"@type":"ThingID","title":"Thing Description ID","readOnly":false,"type":"string"}},"idempotent":true,"input":{"title":"TD","description":"Device TD document in JSON format","readOnly":false,"type":"string"}}},"@context":["https://www.w3.org/2022/wot/td/v1.1","https://www.w3.org/2022/wot/discovery",{"hiveot":"https://www.hiveot.net/vocab/v0.1"}],"@type":["tm:ThingModel","ThingDirectory"],"base":"{{DIRECTORY_BASE_URL}}","created":"2025-09-22T17:00:00.000Z","deny":["none"],"description":"HiveOT digital twin directory service","events":{"thingDeleted":{"description":"A Thing TD was removed from the directory","title":"Thing Deleted","data":{"title":"Thing ID","description":"ID of the digital twin Thing that was deleted","readOnly":false,"type":"string"}},"thingUpdated":{"description":"A digital twin Thing TD was updated in the directory","title":"Thing Updated","data":{"title":"TD","description":"JSON encoded TD of the digital twin Thing","readOnly":false,"type":"string"}}},"id":"ThingDirectory","modified":"2025-09-22T17:00:00.000Z","properties":{"things":{"description":"Retrieve all Thing Descriptions","readOnly":false,"type":"array","items":{"description":"Thing Description","readOnly":false,"type":"object"},"forms":[{"additionalResponses":[{"contentType":"application/problem+json","description":"Invalid query arguments","htv:statusCodeValue":400}],"href":"/things{?offset,limit}","htv:methodName":"GET","response":{"contentType":"application/ld+json","description":"Success response","htv:headers":[{"htv:fieldName":"Link"}],"htv:statusCodeValue":200}}],"uriVariables":{"limit":{"title":"Number of TDs in a page","default":1,"readOnly":false,"type":"number"},"offset":{"title":"Number of TDs to skip before the page","default":0,"readOnly":false,"type":"number"}}}},"security":null,"securityDefinitions":null,"title":"DigiTwin Directory Service","support":"https://www.github.com/hiveot/hub"}`