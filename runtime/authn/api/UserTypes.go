// Package authn with types of service 'User' from agent 'authn'
// DO NOT EDIT. This file is auto generated by tm2go. Any changes will be overwritten.
// Intended for use by both service agents and consumer.
// Generated 16 Aug 2025 08:50 PDT. 
package authn


//--- Constants ---

// UserAgentID is the account ID of the agent managing the Thing.
const UserAgentID = "authn"

// UserServiceID is the thingID of the device/service as used by agents.
// Agents use this to publish events and subscribe to actions
const UserServiceID = "User"

// UserDThingID is the Digitwin thingID as used by consumers. Digitwin adds the dtw:{agent} prefix to the serviceID
// Consumers use this to publish actions and subscribe to events
const UserDThingID = "dtw:authn:User"

// Property, Event and Action names
const (
    UserActionGetProfile = "getProfile"
    UserActionLogin = "login"
    UserActionLogout = "logout"
    UserActionRefreshToken = "refreshToken"
    UserActionUpdateName = "updateName"
    UserActionUpdatePassword = "updatePassword"
    UserActionUpdatePubKey = "updatePubKey"
)

//--- Schema definitions of Thing 'user' ---

// ClientProfile defines a Client Profile data schema.
//
// This contains client information of device agents, services and consumers
type ClientProfile struct {
    
    // ClientID with Client ID
    ClientID string `json:"clientID,omitempty"`
    
    // ClientType with Client Type
    ClientType ClientType `json:"clientType,omitempty"`
    
    // Disabled with Disabled
    //
    // This client account has been disabled
    Disabled bool `json:"disabled,omitempty"`
    
    // DisplayName with Display Name
    DisplayName string `json:"displayName,omitempty"`
    
    // PubKey with Public Key
    PubKey string `json:"pubKey,omitempty"`
    
    // Updated with Client name or auth updated timestamp
    Updated string `json:"updated,omitempty"`
}

// ClientType enumerator
//
// identifies the client's category
type ClientType string
const (
    
    // ClientTypeAgent for Agent
    //
    // Agents represent one or more devices
    ClientTypeAgent ClientType = "agent"
    
    // ClientTypeService for Service
    //
    // Service enrich information
    ClientTypeService ClientType = "service"
    
    // ClientTypeConsumer for Consumer
    //
    // Consumers are end-users of information
    ClientTypeConsumer ClientType = "consumer"
)

//--- Argument and Response struct for action of Thing 'user' ---

const UserGetProfileMethod = "getProfile"

// UserGetProfileResp defines the response of the getProfile function
// Get Client Profile - 
// UserGetProfileResp defines a  data schema.
type UserGetProfileResp ClientProfile


const UserLoginMethod = "login"

// UserLoginArgs defines the arguments of the login function
// Login - Login with password
type UserLoginArgs struct {
    
    // ClientID with Login ID
    ClientID string `json:"clientID,omitempty"`
    
    // Password with Password
    Password string `json:"password,omitempty"`
}

const UserLogoutMethod = "logout"

const UserRefreshTokenMethod = "refreshToken"

const UserUpdateNameMethod = "updateName"

const UserUpdatePasswordMethod = "updatePassword"

const UserUpdatePubKeyMethod = "updatePubKey"


// UserTD contains the raw TD of this service for publication to the Hub
const UserTD = `{"actions":{"getProfile":{"@type":"hiveot:function","title":"Get Client Profile","output":{"readOnly":false,"type":"object","schema":"ClientProfile"},"safe":true},"login":{"@type":"hiveot:function","description":"Login with password","title":"Login","input":{"readOnly":false,"type":"object","properties":{"clientID":{"title":"Login ID","readOnly":false,"type":"string"},"password":{"title":"Password","readOnly":false,"type":"string"}}},"output":{"title":"Token","readOnly":false,"type":"string"}},"logout":{"@type":"hiveot:function","description":"Logout from all devices","title":"Logout","idempotent":true},"refreshToken":{"@type":"hiveot:function","title":"Request a new auth token for the current client","input":{"title":"Old Token","readOnly":false,"type":"string"},"output":{"title":"New Token","readOnly":false,"type":"string"}},"updateName":{"@type":"hiveot:function","title":"Request changing the display name of the current client","idempotent":true,"input":{"title":"New Name","readOnly":false,"type":"string"}},"updatePassword":{"@type":"hiveot:function","description":"Request changing the password of the current client","title":"Update Password","idempotent":true,"input":{"title":"Password","readOnly":false,"type":"string"}},"updatePubKey":{"@type":"hiveot:function","description":"Request changing the public key on file of the current client.","title":"Update Public Key","idempotent":true,"input":{"title":"Public Key PEM","description":"Public Key in PEM format","readOnly":false,"type":"string"}}},"@context":["https://www.w3.org/2022/wot/td/v1.1",{"hiveot":"https://www.hiveot.net/vocab/v0.1"}],"@type":"Service","created":"2024-06-04T17:00:00.000Z","deny":["none"],"description":"HiveOT runtime service for users","events":{},"id":"User","modified":"2024-06-04T17:00:00.000Z","properties":{},"schemaDefinitions":{"ClientProfile":{"title":"Client Profile","description":"This contains client information of device agents, services and consumers","readOnly":false,"type":"object","properties":{"clientID":{"title":"Client ID","readOnly":false,"type":"string"},"clientType":{"title":"Client Type","readOnly":false,"type":"ClientType"},"disabled":{"title":"Disabled","description":"This client account has been disabled","readOnly":false,"type":"bool"},"displayName":{"title":"Display Name","readOnly":false,"type":"string"},"pubKey":{"title":"Public Key","readOnly":false,"type":"string"},"updated":{"title":"Client name or auth updated timestamp","readOnly":false,"type":"string"}}},"ClientType":{"title":"Client Type","description":"identifies the client's category","oneOf":[{"title":"Agent","description":"Agents represent one or more devices","const":"agent","readOnly":false},{"title":"Service","description":"Service enrich information","const":"service","readOnly":false},{"title":"Consumer","description":"Consumers are end-users of information","const":"consumer","readOnly":false}],"readOnly":false,"type":"string"}},"security":null,"securityDefinitions":null,"title":"Authentication User Service","support":"https://www.github.com/hiveot/hub"}`