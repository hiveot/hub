// Package authn with types of service 'Admin' from agent 'authn'
// DO NOT EDIT. This file is auto generated by tm2go. Any changes will be overwritten.
// Intended for use by both service agents and consumer.
// Generated 13 Oct 2025 14:19 PDT. 
package authn


//--- Constants ---

// AdminAgentID is the account ID of the agent managing the Thing.
const AdminAgentID = "authn"

// AdminServiceID is the thingID of the device/service as used by agents.
// Agents use this to publish events and subscribe to actions
const AdminServiceID = "Admin"

// AdminDThingID is the Digitwin thingID as used by consumers. Digitwin adds the dtw:{agent} prefix to the serviceID
// Consumers use this to publish actions and subscribe to events
const AdminDThingID = "dtw:authn:Admin"

// Property, Event and Action names
const (
    AdminPropNrClients = "nrClients"
    AdminEventAdded = "added"
    AdminEventRemoved = "removed"
    AdminActionAddService = "addService"
    AdminActionGetClientProfile = "getClientProfile"
    AdminActionGetSessions = "getSessions"
    AdminActionSetClientPassword = "setClientPassword"
    AdminActionAddAgent = "addAgent"
    AdminActionGetProfiles = "getProfiles"
    AdminActionNewAgentToken = "newAgentToken"
    AdminActionRemoveClient = "removeClient"
    AdminActionUpdateClientProfile = "updateClientProfile"
    AdminActionAddConsumer = "addConsumer"
)
//--- Argument and Response struct for action of Thing 'admin' ---

const AdminAddAgentMethod = "addAgent"

// AdminAddAgentArgs defines the arguments of the addAgent function
// Add Agent - Create an account for IoT device agents
type AdminAddAgentArgs struct {
    
    // ClientID with Client ID
    ClientID string `json:"clientID,omitempty"`
    
    // DisplayName with Display Name
    DisplayName string `json:"displayName,omitempty"`
    
    // PubKey with Public Key
    PubKey string `json:"pubKey,omitempty"`
}

const AdminAddConsumerMethod = "addConsumer"

// AdminAddConsumerArgs defines the arguments of the addConsumer function
// Add Consumer - Add an end-user client
type AdminAddConsumerArgs struct {
    
    // ClientID with Client ID
    ClientID string `json:"clientID,omitempty"`
    
    // DisplayName with Display Name
    DisplayName string `json:"displayName,omitempty"`
    
    // Password with Password
    Password string `json:"password,omitempty"`
}

const AdminAddServiceMethod = "addService"

// AdminAddServiceArgs defines the arguments of the addService function
// Add Service - Add a service account
type AdminAddServiceArgs struct {
    
    // ClientID with Client ID
    ClientID string `json:"clientID,omitempty"`
    
    // DisplayName with Display Name
    DisplayName string `json:"displayName,omitempty"`
    
    // PubKey with Public Key
    PubKey string `json:"pubKey,omitempty"`
}

const AdminGetClientProfileMethod = "getClientProfile"

// AdminGetClientProfileResp defines the response of the getClientProfile function
// Get Client Profile - Get the profile information describing a client
// AdminGetClientProfileResp defines a Profile data schema.
type AdminGetClientProfileResp ClientProfile


const AdminGetProfilesMethod = "getProfiles"

// AdminGetProfilesResp defines the response of the getProfiles function
// Get Profiles - Get a list of all client profiles
// AdminGetProfilesResp defines a Client Profiles data schema.
type AdminGetProfilesResp []struct {
    
    // AdminGetProfilesResp with Client Profile
    AdminGetProfilesResp *ClientProfile `json:"AdminGetProfilesResp,omitempty"`
}


const AdminGetSessionsMethod = "getSessions"

// AdminGetSessionsResp defines the response of the getSessions function
// Get Sessions - Get a list of active sessions
// AdminGetSessionsResp defines a Client Sessions data schema.
type AdminGetSessionsResp []struct {
    
    // ClientID with Client ID
    ClientID string `json:"clientID,omitempty"`
    
    // Created with Session created
    Created string `json:"created,omitempty"`
    
    // Expiry with Session expires
    Expiry string `json:"expiry,omitempty"`
}


const AdminNewAgentTokenMethod = "newAgentToken"

const AdminRemoveClientMethod = "removeClient"

const AdminSetClientPasswordMethod = "setClientPassword"

// AdminSetClientPasswordArgs defines the arguments of the setClientPassword function
// Set Client Password - Update the password of a consumer
//
// Client ID and password
type AdminSetClientPasswordArgs struct {
    
    // ClientID with Client ID
    ClientID string `json:"clientID,omitempty"`
    
    // Password with Password
    Password string `json:"password,omitempty"`
}

const AdminUpdateClientProfileMethod = "updateClientProfile"


// AdminTD contains the raw TD of this service for publication to the Hub
const AdminTD = `{"actions":{"addAgent":{"@type":"hiveot:function","description":"Create an account for IoT device agents","title":"Add Agent","idempotent":true,"input":{"title":"Agent Info","readOnly":false,"type":"object","properties":{"clientID":{"title":"Client ID","readOnly":false,"type":"string"},"displayName":{"title":"Display Name","readOnly":false,"type":"string"},"pubKey":{"title":"Public Key","readOnly":false,"type":"string"}}},"output":{"title":"Token","description":"Agent authentication token","readOnly":false,"type":"string"}},"addConsumer":{"@type":"hiveot:function","description":"Add an end-user client","title":"Add Consumer","idempotent":true,"input":{"title":"Consumer Info","readOnly":false,"type":"object","properties":{"clientID":{"title":"Client ID","readOnly":false,"type":"string"},"displayName":{"title":"Display Name","readOnly":false,"type":"string"},"password":{"title":"Password","readOnly":false,"type":"string"}}}},"addService":{"@type":"hiveot:function","description":"Add a service account","title":"Add Service","idempotent":true,"input":{"title":"Service Info","readOnly":false,"type":"object","properties":{"clientID":{"title":"Client ID","readOnly":false,"type":"string"},"displayName":{"title":"Display Name","readOnly":false,"type":"string"},"pubKey":{"title":"Public Key","readOnly":false,"type":"string"}}},"output":{"title":"Token","description":"Service authentication token","readOnly":false,"type":"string"}},"getClientProfile":{"@type":"hiveot:function","description":"Get the profile information describing a client","title":"Get Client Profile","idempotent":true,"input":{"title":"Client ID","readOnly":false,"type":"string"},"output":{"title":"Profile","readOnly":false,"type":"object","schema":"ClientProfile"},"safe":true},"getProfiles":{"@type":"hiveot:function","description":"Get a list of all client profiles","title":"Get Profiles","idempotent":true,"output":{"title":"Client Profiles","readOnly":false,"type":"array","items":{"title":"Client Profile","readOnly":false,"type":"object","schema":"ClientProfile"}},"safe":true},"getSessions":{"@type":"hiveot:function","description":"Get a list of active sessions","title":"Get Sessions","idempotent":true,"output":{"title":"Client Sessions","readOnly":false,"type":"array","items":{"title":"Client session","readOnly":false,"type":"object","properties":{"clientID":{"title":"Client ID","readOnly":false,"type":"string"},"created":{"title":"Session created","readOnly":false,"type":"string"},"expiry":{"title":"Session expires","readOnly":false,"type":"string"}}}},"safe":true},"newAgentToken":{"@type":"hiveot:function","description":"Obtain a new authentication token for an agent or service","title":"New Agent Token","input":{"title":"Agent ID","readOnly":false,"type":"string"},"output":{"title":"Token","description":"New service or agent authentication token","readOnly":false,"type":"string"}},"removeClient":{"@type":"hiveot:function","description":"Remove a client account","title":"Remove Client","input":{"title":"Client ID","readOnly":false,"type":"string"}},"setClientPassword":{"@type":"hiveot:function","description":"Update the password of a consumer","title":"Set Client Password","input":{"title":"Client Info","description":"Client ID and password","readOnly":false,"type":"object","properties":{"clientID":{"title":"Client ID","readOnly":false,"type":"string"},"password":{"title":"Password","readOnly":false,"type":"string"}}}},"updateClientProfile":{"@type":"hiveot:function","description":"Update the details of a client","title":"Update Client Profile","input":{"title":"Client Profile","readOnly":false,"type":"ClientProfile"}}},"allow":["admin"],"@context":["https://www.w3.org/2022/wot/td/v1.1",{"hiveot":"https://www.hiveot.net/vocab/v0.1"}],"@type":"Service","created":"2024-06-04T17:00:00.000Z","description":"HiveOT runtime service for administration of consumers, Thing agents and services","events":{"added":{"description":"A new client was added","title":"Client Added","data":{"title":"Client ID","readOnly":false,"type":"string"}},"removed":{"description":"A client was removed","title":"Client Removed","data":{"title":"Client ID","readOnly":false,"type":"string"}}},"id":"Admin","modified":"2025-01-28T17:00:00.000Z","properties":{"nrClients":{"title":"Number of clients","readOnly":true,"type":"integer","forms":null}},"security":null,"securityDefinitions":null,"title":"Authentication Administration Service","support":"https://www.github.com/hiveot/hub"}`