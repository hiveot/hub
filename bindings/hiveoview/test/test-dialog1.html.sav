<div id="modal" class="modal"
     _="on closeModal add .closing then wait for animationend then remove me"
>
    <div class="modal-mask" _="on click trigger closeModal"></div>

    <div class="modal-content h-shadow">
        <h1>Hello this is a dialog</h1>
        <button _="on click trigger closeModal">Close
        </button>
    </div>
</div>
<style>
    /*https://htmx.org/examples/modal-custom/*/
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;

        /* Flexbox centers the .modal-content vertically and horizontally */
        display: flex;
        align-items: center;
        justify-content: center;

        /* Animate when opening */
        animation-name: fadeIn;
        animation-duration: 500ms;
        animation-timing-function: ease;
    }


    :target {
        opacity: 1;
        pointer-events: auto;
    }

    .modal:active {
        opacity: 1;
        pointer-events: auto;
    }

    /* mask closing when clicking outside the modal content */
    .modal-mask {
        display: block;
        position: fixed;
        cursor: pointer;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background: aliceblue;
        opacity: 80%;
        z-index: 1;
    }

    .modal-content {
        /*parent is flexbox so no need to set position*/
        padding: 10px;
        margin: 10px;
        z-index: 3;
        display: flex;
        flex-direction: column;
        opacity: 1;
        background: #e3e2e1;
        border: solid 1px #999;
        border-radius: 8px;

    }

    .modal.closing {
        /* Animate when closing */
        animation-name: fadeOut;
        animation-duration: 300ms;
        animation-timing-function: ease;
    }

    @keyframes fadeIn {
        0% {
            transform: translateY(-30%);
            opacity: 0;
        }
        100% {
            transform: translateY(-0%);
            opacity: 1;
        }
    }

    @keyframes fadeOut {
        0% {
            transform: translateY(-0%);
            opacity: 1;
        }
        100% {
            transform: translateY(-30%);
            opacity: 0;
        }
    }
</style>