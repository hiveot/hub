<!--Datascheme form
    This form presents a field from a dataschema.

    TODO: support for object type with multiple properties
 -->

{{- /*gotype:github.com/hiveot/hub/bindings/hiveoview/src/views/thing.IOSchema*/ -}}

{{$minmax := ""}}
{{$iv := .Value}}

{{if .DataSchema.Enum }}
    {{/*	=== Enum Selection Input ===*/}}
    {{/* add a select with list of options for the .DataSchema.Enum values */}}
		<select id="config-input" name="value" autofocus>
        {{ range $enumValue := .DataSchema.Enum}}
					<option {{if eq $enumValue $iv}} selected {{end}}>
              {{$enumValue}}
					</option>
        {{end}}
		</select>
		<small>Current value: {{$iv}}  (Default: {{.DataSchema.Default}})</small>

{{else if eq .DataSchema.Type "number"}}
    {{/*	=== Numeric Input ===*/}}
    {{if .DataSchema.Minimum}}
        {{/*FIXME: don't hard code rounding*/}}
        {{$minmax = printf " [%0.01f-%0.01f]" .DataSchema.Minimum .DataSchema.Maximum }}
    {{end}}
		<input id="config-input" name="value"
		       autofocus autocomplete="off" type="number"
		       placeholder="{{$iv}}"
		       value="{{$iv}}"
		/>
		<small>Current value: {{.Value}} {{.DataSchema.Unit}} {{$minmax}} </small>

{{else if eq .DataSchema.Type "integer"}}
    {{/*	=== Integer Input ===*/}}
    {{if .DataSchema.Minimum}}
        {{$minmax = printf " [%d-%d]" .DataSchema.Minimum .DataSchema.Maximum }}
    {{end}}
		<input id="config-input" name="value"
		       autofocus autocomplete="off" type="number"
		       placeholder="{{$iv}}"
		/>
		<small>Current value: {{.Value}} {{.DataSchema.Unit}} {{$minmax}}</small>

{{else if eq .DataSchema.Type "boolean"}}
    {{/*	=== Boolean Input ===*/}}
		<input id="config-input" name="value"
		       type="checkbox" role="switch" autofocus
            {{if eq $iv "true"}} checked {{end}}/>

{{else}}
    {{/*	=== Text Input ===*/}}
		<input id="config-input" name="value"
		       autofocus autocomplete="off"
		       placeholder="{{$iv}}" value="{{$iv}}"/>
		<small>Current value: {{$iv}}</small>
{{end}}

