<!--Directory template

 @param .Groups: map of groups by publisher agentID, each containing
     the .Publisher and an array of .Things (TD documents)
 @param .Error: in case of error to display
 -->

<!--After an initial load without data, auto-reload when viewed. -->
{{$trigger := "intersect once"}}
{{if .Directory}}
    {{$trigger = "click from:#reload-directory"}}
{{end}}

<main class="container-fluid"
      hx-get="/app/directory"
      hx-trigger="{{$trigger}}"
      hx-target="this"
      hx-swap="outerHTML">

	<!-- Header with a 'reload' button that triggers the htmx-get request above-->
	<header class="directory-header h-row">
		<div class="h-grow"></div>
		<h4 style="margin-top: 1rem; margin-bottom: 0; margin-right: 5px;">Device & Service Directory</h4>
		<div class="h-grow"></div>
		<button id="reload-directory" class="outline h-icon-button"
		        title="Reload directory">
			<iconify-icon icon="mdi:refresh"></iconify-icon>
		</button>

	</header>

	<div>
		<!--=== for {.Publisher, .Things} in .Groups ===-->
      {{range .Directory.Groups}}

				<hr/>
				<!-- Table of all things from template ".Things" data-->
				<details>
					<summary class="outline">
						<span>Publisher:</span>
						<span style="font-size: medium"><strong>{{.Publisher}}</strong></span>
						<span>- {{len .Things}} things</span>
					</summary>

					<table class="directory-table h-grid-table striped">
						<thead>
						<tr>
							<th class="h-show-md"></th>
							<th>Thing ID</th>
							<th>Name</th>
							<th class="h-show-sm">Type</th>
							<th class="h-show-md">Outputs</th>
							<th class="h-show-md">Actions</th>
							<th class="h-show-lg">Updated</th>
							<!--            <th scope="col">Description</th>-->
						</tr>
						</thead>

						<tbody>
						<!--=== for TD{} in .Things ===-->
            {{$agentID := .Publisher}}
            {{range .Things}}
							<tr>
								<td class="h-show-md">
									<h-device-icon deviceType={{.DeviceType}}></h-device-icon>
								</td>
								<td>
									<!-- hx-push-url does not trigger popState so how to show result?-->
									<a href="/app/thing/{{$agentID}}/{{.ID}}"
									   hx-get="/app/thing/{{$agentID}}/{{.ID}}"
									   hx-target="#thing"
									   hx-swap="innerHtml"
									   hx-trigger="click"
									   onclick="navigateTo(null,this.href)"
									>{{.ID}}
									</a>
								</td>
								<td>{{.Title}}</td>
								<td class="h-show-sm">{{.DeviceType}}</td>
								<td class="h-show-md">{{len .Events}} outputs</td>
								<td class="h-show-md">{{len .Actions}} actions</td>
								<td class="h-show-lg">{{.GetAge}} ago</td>
							</tr>
            {{end}}
						</tbody>

						<tfoot>
						<tr>
							<!--                    <td colspan="3">Nr Things: {{ len .Things }}</td>-->
						</tr>
						</tfoot>
					</table>
				</details>
      {{end}}
	</div>
	<hr/>

	<!-- TODO: add pager with first, prev, next, nr entries per page
				or, use continuous scrolling.
			-->

    {{if not .Directory}}
			<h-loading></h-loading>
    {{end}}

</main>


<style>

    @media (width < 576px) {
        .directory-table {
            /*xs, show column 2, 3 */
            grid-template-columns:
				            minmax(150px, max-content) minmax(150px, max-content);
        }
    }

    @media (width >= 576px) {
        .directory-table {
            /*sm, show column 2,3,4 */
            grid-template-columns:
				      minmax(150px, max-content)
				      minmax(150px, 1fr)
              minmax(100px, 1fr);
        }
    }

    @media (width >= 768px) {
        .directory-table {
            /*md,show column 1,2,3,4,5,6*/
            grid-template-columns:
	            60px
              minmax(150px, max-content)
              minmax(150px, 1fr)
              minmax(100px, 1fr)
			        minmax(100px, 1fr)
	            minmax(100px, 1fr);
        }
    }

    @media (width >= 992px) {
        .directory-table {
            /*lg, show all 7*/
            grid-template-columns:
				      60px
			        minmax(150px, max-content)
			        minmax(150px, 1fr)
			        minmax(100px, 1fr)
			        minmax(100px, 150px)
			        minmax(100px, 150px)
			        minmax(100px, 200px);
        }
    }

</style>