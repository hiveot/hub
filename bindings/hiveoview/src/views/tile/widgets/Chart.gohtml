<!--Chart Tile renderer for lines, area, bars -->

{{- /*gotype:github.com/hiveot/hub/bindings/hiveoview/src/views/tile.RenderTileTemplateData*/ -}}

<div style="height:100%; width:100%">

	<h-timechart style="flex-grow:1"
	             chart-type="{{$.Tile.TileType}}"
	>
    {{/* Each source is a line*/}}
    {{range .Tile.Sources}}

    {{- /*gotype:github.com/hiveot/hub/bindings/hiveoview/src/views/history.HistoryTemplateData*/ -}}
    {{$hist := $.GetHistory .ThingID .Key}}


    {{/* inject the json encoded array with data to show as {x:time,y:value} here */}}
	  {{/* The chart type can be overridden per data set*/}}
		<data title="{{$hist.Title}}"
		      unit="{{$hist.DataSchema.UnitSymbol}}"
		      key="{{$hist.Title}}"
		      chart-type="{{$.Tile.TileType}}"

            {{/* Auto-update chart when looking at today*/}}
            {{if eq $hist.CompareToday 0}}
							sse-swap="{{$hist.ThingID}}/{{$hist.Key}}"
							hx-target="this"
							hx-swap="none"
							hx-on::sse-before-message="updateChart(event, '{{$hist.Title}}')"
            {{end}}
		>
        {{ $hist.AsJSON }}
		</data>

		{{end}}
	</h-timechart>

</div>

<script>
    // updateChart uses the SSE event to add a value to the chart
    // However to get the timestamp, the event itself should contain the ThingMessage,
    // rather than just the value.
    // As a workaround just use 'now' as the timestamp
    updateChart = (event, key) => {
        // console.log("updateChart",event, key)
		    let chartEl = event.target.parentElement
        chartEl.addValue(null, event.detail.data, key)
    }
</script>
