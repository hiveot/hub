package gentypes

import (
	"encoding/json"
	"time"

	"github.com/hiveot/hub/lib/utils"
	"github.com/hiveot/hub/wot/td"
)

// GenTypes is the main function to generate the types API based on a TD
// This contains all constants, enums, and data schemas used in the TD
func GenTypes(l *utils.SL, agentID string, tdi *td.TD) (err error) {

	serviceID := ToTitle(tdi.ID)

	genImports(l, agentID, serviceID)
	GenThingConstantsFromTD(l, agentID, serviceID, tdi)
	err = GenSchemaDefinitions(l, tdi)
	GenActionStructs(l, agentID, serviceID, tdi)

	// last embed the original TD in json so the agent can publish it
	tdi.ID = serviceID
	tdDoc, _ := json.Marshal(tdi)
	l.Add("")
	l.Add("// %sTD contains the raw TD of this service for publication to the Hub", serviceID)
	l.Add("const %sTD = `%s`", serviceID, tdDoc)
	return err
}

func genImports(l *utils.SL, agentID string, serviceID string) {

	l.Add("// Package %s with types of service '%s' from agent '%s'",
		agentID, serviceID, agentID)
	l.Add("// DO NOT EDIT. This file is auto generated by tm2go. Any changes will be overwritten.")
	l.Add("// Intended for use by both service agents and consumer.")
	l.Add("// Generated %s. ", time.Now().Format("02 Jan 2006 15:04 MST"))
	l.Add("package %s", agentID)

	l.Add("")
	//l.Add("import \"errors\"")
	//l.Add("import \"github.com/hiveot/hub/messaging/messaging\"")
	//l.Add("import \"github.com/hiveot/hub/messaging/tputils\"")
	//l.Add("import \"github.com/hiveot/hub/messaging\"")
	l.Add("")

}
